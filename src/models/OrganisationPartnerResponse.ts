/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PartnerAddress } from './PartnerAddress';
import {
    PartnerAddressFromJSON,
    PartnerAddressFromJSONTyped,
    PartnerAddressToJSON,
} from './PartnerAddress';
import type { PartnerContact } from './PartnerContact';
import {
    PartnerContactFromJSON,
    PartnerContactFromJSONTyped,
    PartnerContactToJSON,
} from './PartnerContact';

/**
 * 
 * @export
 * @interface OrganisationPartnerResponse
 */
export interface OrganisationPartnerResponse {
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationPartnerResponse
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationPartnerResponse
     */
    organisationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganisationPartnerResponse
     */
    organisationName?: string | null;
    /**
     * 
     * @type {PartnerAddress}
     * @memberof OrganisationPartnerResponse
     */
    address?: PartnerAddress;
    /**
     * 
     * @type {PartnerContact}
     * @memberof OrganisationPartnerResponse
     */
    contact?: PartnerContact;
}

/**
 * Check if a given object implements the OrganisationPartnerResponse interface.
 */
export function instanceOfOrganisationPartnerResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrganisationPartnerResponseFromJSON(json: any): OrganisationPartnerResponse {
    return OrganisationPartnerResponseFromJSONTyped(json, false);
}

export function OrganisationPartnerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganisationPartnerResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'organisationNumber': !exists(json, 'organisationNumber') ? undefined : json['organisationNumber'],
        'organisationName': !exists(json, 'organisationName') ? undefined : json['organisationName'],
        'address': !exists(json, 'address') ? undefined : PartnerAddressFromJSON(json['address']),
        'contact': !exists(json, 'contact') ? undefined : PartnerContactFromJSON(json['contact']),
    };
}

export function OrganisationPartnerResponseToJSON(value?: OrganisationPartnerResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'organisationNumber': value.organisationNumber,
        'organisationName': value.organisationName,
        'address': PartnerAddressToJSON(value.address),
        'contact': PartnerContactToJSON(value.contact),
    };
}

