/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NetworkIp
 */
export interface NetworkIp {
    /**
     * 
     * @type {string}
     * @memberof NetworkIp
     */
    _public?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NetworkIp
     */
    local?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NetworkIp
     */
    mask?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NetworkIp
     */
    gateway?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NetworkIp
     */
    dns?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof NetworkIp
     */
    dhcp?: boolean;
}

/**
 * Check if a given object implements the NetworkIp interface.
 */
export function instanceOfNetworkIp(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NetworkIpFromJSON(json: any): NetworkIp {
    return NetworkIpFromJSONTyped(json, false);
}

export function NetworkIpFromJSONTyped(json: any, ignoreDiscriminator: boolean): NetworkIp {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_public': !exists(json, 'public') ? undefined : json['public'],
        'local': !exists(json, 'local') ? undefined : json['local'],
        'mask': !exists(json, 'mask') ? undefined : json['mask'],
        'gateway': !exists(json, 'gateway') ? undefined : json['gateway'],
        'dns': !exists(json, 'dns') ? undefined : json['dns'],
        'dhcp': !exists(json, 'dhcp') ? undefined : json['dhcp'],
    };
}

export function NetworkIpToJSON(value?: NetworkIp | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'public': value._public,
        'local': value.local,
        'mask': value.mask,
        'gateway': value.gateway,
        'dns': value.dns,
        'dhcp': value.dhcp,
    };
}

