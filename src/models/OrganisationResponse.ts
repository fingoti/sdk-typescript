/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrganisationResponse
 */
export interface OrganisationResponse {
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationResponse
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationResponse
     */
    disabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    organisationNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    organisationName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    organisationHandle?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationResponse
     */
    isBusiness?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OrganisationResponse
     */
    isPartner?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    partnerId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    mainContact?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    mainAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    billingContact?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    billingAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    deliveryContact?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    deliveryAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    vatNumber?: string | null;
    /**
     * 
     * @type {number}
     * @memberof OrganisationResponse
     */
    credit?: number;
    /**
     * 
     * @type {Date}
     * @memberof OrganisationResponse
     */
    registeredOn?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    adminRole?: string;
    /**
     * 
     * @type {string}
     * @memberof OrganisationResponse
     */
    readRole?: string;
}

/**
 * Check if a given object implements the OrganisationResponse interface.
 */
export function instanceOfOrganisationResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrganisationResponseFromJSON(json: any): OrganisationResponse {
    return OrganisationResponseFromJSONTyped(json, false);
}

export function OrganisationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganisationResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'disabled': !exists(json, 'disabled') ? undefined : json['disabled'],
        'organisationNumber': !exists(json, 'organisationNumber') ? undefined : json['organisationNumber'],
        'organisationName': !exists(json, 'organisationName') ? undefined : json['organisationName'],
        'organisationHandle': !exists(json, 'organisationHandle') ? undefined : json['organisationHandle'],
        'isBusiness': !exists(json, 'isBusiness') ? undefined : json['isBusiness'],
        'isPartner': !exists(json, 'isPartner') ? undefined : json['isPartner'],
        'partnerId': !exists(json, 'partnerId') ? undefined : json['partnerId'],
        'mainContact': !exists(json, 'mainContact') ? undefined : json['mainContact'],
        'mainAddress': !exists(json, 'mainAddress') ? undefined : json['mainAddress'],
        'billingContact': !exists(json, 'billingContact') ? undefined : json['billingContact'],
        'billingAddress': !exists(json, 'billingAddress') ? undefined : json['billingAddress'],
        'deliveryContact': !exists(json, 'deliveryContact') ? undefined : json['deliveryContact'],
        'deliveryAddress': !exists(json, 'deliveryAddress') ? undefined : json['deliveryAddress'],
        'vatNumber': !exists(json, 'vatNumber') ? undefined : json['vatNumber'],
        'credit': !exists(json, 'credit') ? undefined : json['credit'],
        'registeredOn': !exists(json, 'registeredOn') ? undefined : (json['registeredOn'] === null ? null : new Date(json['registeredOn'])),
        'adminRole': !exists(json, 'adminRole') ? undefined : json['adminRole'],
        'readRole': !exists(json, 'readRole') ? undefined : json['readRole'],
    };
}

export function OrganisationResponseToJSON(value?: OrganisationResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'id': value.id,
        'disabled': value.disabled,
        'organisationNumber': value.organisationNumber,
        'organisationName': value.organisationName,
        'organisationHandle': value.organisationHandle,
        'isBusiness': value.isBusiness,
        'isPartner': value.isPartner,
        'partnerId': value.partnerId,
        'mainContact': value.mainContact,
        'mainAddress': value.mainAddress,
        'billingContact': value.billingContact,
        'billingAddress': value.billingAddress,
        'deliveryContact': value.deliveryContact,
        'deliveryAddress': value.deliveryAddress,
        'vatNumber': value.vatNumber,
        'credit': value.credit,
        'registeredOn': value.registeredOn === undefined ? undefined : (value.registeredOn === null ? null : value.registeredOn.toISOString()),
        'adminRole': value.adminRole,
        'readRole': value.readRole,
    };
}

