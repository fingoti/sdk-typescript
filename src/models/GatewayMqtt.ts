/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MqttSetup } from './MqttSetup';
import {
    MqttSetupFromJSON,
    MqttSetupFromJSONTyped,
    MqttSetupToJSON,
} from './MqttSetup';
import type { MqttStatus } from './MqttStatus';
import {
    MqttStatusFromJSON,
    MqttStatusFromJSONTyped,
    MqttStatusToJSON,
} from './MqttStatus';

/**
 * 
 * @export
 * @interface GatewayMqtt
 */
export interface GatewayMqtt {
    /**
     * 
     * @type {MqttStatus}
     * @memberof GatewayMqtt
     */
    status?: MqttStatus;
    /**
     * 
     * @type {MqttSetup}
     * @memberof GatewayMqtt
     */
    setup?: MqttSetup;
    /**
     * 
     * @type {boolean}
     * @memberof GatewayMqtt
     */
    certificate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GatewayMqtt
     */
    session?: boolean;
}

/**
 * Check if a given object implements the GatewayMqtt interface.
 */
export function instanceOfGatewayMqtt(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayMqttFromJSON(json: any): GatewayMqtt {
    return GatewayMqttFromJSONTyped(json, false);
}

export function GatewayMqttFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayMqtt {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : MqttStatusFromJSON(json['status']),
        'setup': !exists(json, 'setup') ? undefined : MqttSetupFromJSON(json['setup']),
        'certificate': !exists(json, 'certificate') ? undefined : json['certificate'],
        'session': !exists(json, 'session') ? undefined : json['session'],
    };
}

export function GatewayMqttToJSON(value?: GatewayMqtt | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': MqttStatusToJSON(value.status),
        'setup': MqttSetupToJSON(value.setup),
        'certificate': value.certificate,
        'session': value.session,
    };
}

