/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GatewayClaim
 */
export interface GatewayClaim {
    /**
     * 
     * @type {boolean}
     * @memberof GatewayClaim
     */
    complete?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof GatewayClaim
     */
    date?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof GatewayClaim
     */
    code?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof GatewayClaim
     */
    expiry?: Date | null;
}

/**
 * Check if a given object implements the GatewayClaim interface.
 */
export function instanceOfGatewayClaim(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayClaimFromJSON(json: any): GatewayClaim {
    return GatewayClaimFromJSONTyped(json, false);
}

export function GatewayClaimFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayClaim {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'complete': !exists(json, 'complete') ? undefined : json['complete'],
        'date': !exists(json, 'date') ? undefined : (json['date'] === null ? null : new Date(json['date'])),
        'code': !exists(json, 'code') ? undefined : json['code'],
        'expiry': !exists(json, 'expiry') ? undefined : (json['expiry'] === null ? null : new Date(json['expiry'])),
    };
}

export function GatewayClaimToJSON(value?: GatewayClaim | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'complete': value.complete,
        'date': value.date === undefined ? undefined : (value.date === null ? null : value.date.toISOString()),
        'code': value.code,
        'expiry': value.expiry === undefined ? undefined : (value.expiry === null ? null : value.expiry.toISOString()),
    };
}

