/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UartSetup } from './UartSetup';
import {
    UartSetupFromJSON,
    UartSetupFromJSONTyped,
    UartSetupToJSON,
} from './UartSetup';
import type { UartTrigger } from './UartTrigger';
import {
    UartTriggerFromJSON,
    UartTriggerFromJSONTyped,
    UartTriggerToJSON,
} from './UartTrigger';

/**
 * 
 * @export
 * @interface GatewayUart
 */
export interface GatewayUart {
    /**
     * 
     * @type {Array<number>}
     * @memberof GatewayUart
     */
    data?: Array<number> | null;
    /**
     * 
     * @type {Date}
     * @memberof GatewayUart
     */
    timestamp?: Date;
    /**
     * 
     * @type {number}
     * @memberof GatewayUart
     */
    mode?: number;
    /**
     * 
     * @type {UartSetup}
     * @memberof GatewayUart
     */
    setup?: UartSetup;
    /**
     * 
     * @type {UartTrigger}
     * @memberof GatewayUart
     */
    trigger?: UartTrigger;
    /**
     * 
     * @type {boolean}
     * @memberof GatewayUart
     */
    session?: boolean;
}

/**
 * Check if a given object implements the GatewayUart interface.
 */
export function instanceOfGatewayUart(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayUartFromJSON(json: any): GatewayUart {
    return GatewayUartFromJSONTyped(json, false);
}

export function GatewayUartFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayUart {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : json['data'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
        'mode': !exists(json, 'mode') ? undefined : json['mode'],
        'setup': !exists(json, 'setup') ? undefined : UartSetupFromJSON(json['setup']),
        'trigger': !exists(json, 'trigger') ? undefined : UartTriggerFromJSON(json['trigger']),
        'session': !exists(json, 'session') ? undefined : json['session'],
    };
}

export function GatewayUartToJSON(value?: GatewayUart | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
        'mode': value.mode,
        'setup': UartSetupToJSON(value.setup),
        'trigger': UartTriggerToJSON(value.trigger),
        'session': value.session,
    };
}

