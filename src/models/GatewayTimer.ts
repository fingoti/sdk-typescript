/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TimerRequest } from './TimerRequest';
import {
    TimerRequestFromJSON,
    TimerRequestFromJSONTyped,
    TimerRequestToJSON,
} from './TimerRequest';
import type { TimerStatus } from './TimerStatus';
import {
    TimerStatusFromJSON,
    TimerStatusFromJSONTyped,
    TimerStatusToJSON,
} from './TimerStatus';

/**
 * 
 * @export
 * @interface GatewayTimer
 */
export interface GatewayTimer {
    /**
     * 
     * @type {TimerStatus}
     * @memberof GatewayTimer
     */
    status?: TimerStatus;
    /**
     * 
     * @type {number}
     * @memberof GatewayTimer
     */
    interval?: number;
    /**
     * 
     * @type {Array<TimerRequest>}
     * @memberof GatewayTimer
     */
    request?: Array<TimerRequest> | null;
}

/**
 * Check if a given object implements the GatewayTimer interface.
 */
export function instanceOfGatewayTimer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayTimerFromJSON(json: any): GatewayTimer {
    return GatewayTimerFromJSONTyped(json, false);
}

export function GatewayTimerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayTimer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : TimerStatusFromJSON(json['status']),
        'interval': !exists(json, 'interval') ? undefined : json['interval'],
        'request': !exists(json, 'request') ? undefined : (json['request'] === null ? null : (json['request'] as Array<any>).map(TimerRequestFromJSON)),
    };
}

export function GatewayTimerToJSON(value?: GatewayTimer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': TimerStatusToJSON(value.status),
        'interval': value.interval,
        'request': value.request === undefined ? undefined : (value.request === null ? null : (value.request as Array<any>).map(TimerRequestToJSON)),
    };
}

