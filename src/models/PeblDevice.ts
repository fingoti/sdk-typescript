/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DeviceBlink } from './DeviceBlink';
import {
    DeviceBlinkFromJSON,
    DeviceBlinkFromJSONTyped,
    DeviceBlinkToJSON,
} from './DeviceBlink';
import type { DeviceBus } from './DeviceBus';
import {
    DeviceBusFromJSON,
    DeviceBusFromJSONTyped,
    DeviceBusToJSON,
} from './DeviceBus';
import type { DeviceCloud } from './DeviceCloud';
import {
    DeviceCloudFromJSON,
    DeviceCloudFromJSONTyped,
    DeviceCloudToJSON,
} from './DeviceCloud';
import type { DeviceLocation } from './DeviceLocation';
import {
    DeviceLocationFromJSON,
    DeviceLocationFromJSONTyped,
    DeviceLocationToJSON,
} from './DeviceLocation';
import type { DevicePower } from './DevicePower';
import {
    DevicePowerFromJSON,
    DevicePowerFromJSONTyped,
    DevicePowerToJSON,
} from './DevicePower';
import type { DeviceSession } from './DeviceSession';
import {
    DeviceSessionFromJSON,
    DeviceSessionFromJSONTyped,
    DeviceSessionToJSON,
} from './DeviceSession';
import type { DeviceSupport } from './DeviceSupport';
import {
    DeviceSupportFromJSON,
    DeviceSupportFromJSONTyped,
    DeviceSupportToJSON,
} from './DeviceSupport';
import type { DeviceUptime } from './DeviceUptime';
import {
    DeviceUptimeFromJSON,
    DeviceUptimeFromJSONTyped,
    DeviceUptimeToJSON,
} from './DeviceUptime';
import type { DeviceVersion } from './DeviceVersion';
import {
    DeviceVersionFromJSON,
    DeviceVersionFromJSONTyped,
    DeviceVersionToJSON,
} from './DeviceVersion';

/**
 * 
 * @export
 * @interface PeblDevice
 */
export interface PeblDevice {
    /**
     * 
     * @type {string}
     * @memberof PeblDevice
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PeblDevice
     */
    key?: string | null;
    /**
     * 
     * @type {DeviceSupport}
     * @memberof PeblDevice
     */
    support?: DeviceSupport;
    /**
     * 
     * @type {DeviceCloud}
     * @memberof PeblDevice
     */
    cloud?: DeviceCloud;
    /**
     * 
     * @type {DeviceUptime}
     * @memberof PeblDevice
     */
    uptime?: DeviceUptime;
    /**
     * 
     * @type {boolean}
     * @memberof PeblDevice
     */
    activity?: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof PeblDevice
     */
    colour?: Array<number> | null;
    /**
     * 
     * @type {DeviceBlink}
     * @memberof PeblDevice
     */
    blink?: DeviceBlink;
    /**
     * 
     * @type {DeviceBus}
     * @memberof PeblDevice
     */
    bus?: DeviceBus;
    /**
     * 
     * @type {DevicePower}
     * @memberof PeblDevice
     */
    power?: DevicePower;
    /**
     * 
     * @type {DeviceSession}
     * @memberof PeblDevice
     */
    session?: DeviceSession;
    /**
     * 
     * @type {DeviceVersion}
     * @memberof PeblDevice
     */
    version?: DeviceVersion;
    /**
     * 
     * @type {DeviceLocation}
     * @memberof PeblDevice
     */
    location?: DeviceLocation;
}

/**
 * Check if a given object implements the PeblDevice interface.
 */
export function instanceOfPeblDevice(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PeblDeviceFromJSON(json: any): PeblDevice {
    return PeblDeviceFromJSONTyped(json, false);
}

export function PeblDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PeblDevice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'support': !exists(json, 'support') ? undefined : DeviceSupportFromJSON(json['support']),
        'cloud': !exists(json, 'cloud') ? undefined : DeviceCloudFromJSON(json['cloud']),
        'uptime': !exists(json, 'uptime') ? undefined : DeviceUptimeFromJSON(json['uptime']),
        'activity': !exists(json, 'activity') ? undefined : json['activity'],
        'colour': !exists(json, 'colour') ? undefined : json['colour'],
        'blink': !exists(json, 'blink') ? undefined : DeviceBlinkFromJSON(json['blink']),
        'bus': !exists(json, 'bus') ? undefined : DeviceBusFromJSON(json['bus']),
        'power': !exists(json, 'power') ? undefined : DevicePowerFromJSON(json['power']),
        'session': !exists(json, 'session') ? undefined : DeviceSessionFromJSON(json['session']),
        'version': !exists(json, 'version') ? undefined : DeviceVersionFromJSON(json['version']),
        'location': !exists(json, 'location') ? undefined : DeviceLocationFromJSON(json['location']),
    };
}

export function PeblDeviceToJSON(value?: PeblDevice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'key': value.key,
        'support': DeviceSupportToJSON(value.support),
        'cloud': DeviceCloudToJSON(value.cloud),
        'uptime': DeviceUptimeToJSON(value.uptime),
        'activity': value.activity,
        'colour': value.colour,
        'blink': DeviceBlinkToJSON(value.blink),
        'bus': DeviceBusToJSON(value.bus),
        'power': DevicePowerToJSON(value.power),
        'session': DeviceSessionToJSON(value.session),
        'version': DeviceVersionToJSON(value.version),
        'location': DeviceLocationToJSON(value.location),
    };
}

