/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VyneGateway } from './VyneGateway';
import {
    VyneGatewayFromJSON,
    VyneGatewayFromJSONTyped,
    VyneGatewayToJSON,
} from './VyneGateway';
import type { VyneNode } from './VyneNode';
import {
    VyneNodeFromJSON,
    VyneNodeFromJSONTyped,
    VyneNodeToJSON,
} from './VyneNode';

/**
 * 
 * @export
 * @interface DeviceVyneDto
 */
export interface DeviceVyneDto {
    /**
     * 
     * @type {Array<VyneGateway>}
     * @memberof DeviceVyneDto
     */
    gateway?: Array<VyneGateway> | null;
    /**
     * 
     * @type {Array<VyneNode>}
     * @memberof DeviceVyneDto
     */
    node?: Array<VyneNode> | null;
}

/**
 * Check if a given object implements the DeviceVyneDto interface.
 */
export function instanceOfDeviceVyneDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DeviceVyneDtoFromJSON(json: any): DeviceVyneDto {
    return DeviceVyneDtoFromJSONTyped(json, false);
}

export function DeviceVyneDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceVyneDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gateway': !exists(json, 'gateway') ? undefined : (json['gateway'] === null ? null : (json['gateway'] as Array<any>).map(VyneGatewayFromJSON)),
        'node': !exists(json, 'node') ? undefined : (json['node'] === null ? null : (json['node'] as Array<any>).map(VyneNodeFromJSON)),
    };
}

export function DeviceVyneDtoToJSON(value?: DeviceVyneDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gateway': value.gateway === undefined ? undefined : (value.gateway === null ? null : (value.gateway as Array<any>).map(VyneGatewayToJSON)),
        'node': value.node === undefined ? undefined : (value.node === null ? null : (value.node as Array<any>).map(VyneNodeToJSON)),
    };
}

