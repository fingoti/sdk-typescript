/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UsageTracking } from './UsageTracking';
import {
    UsageTrackingFromJSON,
    UsageTrackingFromJSONTyped,
    UsageTrackingToJSON,
} from './UsageTracking';

/**
 * 
 * @export
 * @interface UsageTrackingResponse
 */
export interface UsageTrackingResponse {
    /**
     * 
     * @type {boolean}
     * @memberof UsageTrackingResponse
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UsageTrackingResponse
     */
    message?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UsageTrackingResponse
     */
    readonly count?: number;
    /**
     * 
     * @type {Array<UsageTracking>}
     * @memberof UsageTrackingResponse
     */
    usage?: Array<UsageTracking> | null;
}

/**
 * Check if a given object implements the UsageTrackingResponse interface.
 */
export function instanceOfUsageTrackingResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UsageTrackingResponseFromJSON(json: any): UsageTrackingResponse {
    return UsageTrackingResponseFromJSONTyped(json, false);
}

export function UsageTrackingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsageTrackingResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'usage': !exists(json, 'usage') ? undefined : (json['usage'] === null ? null : (json['usage'] as Array<any>).map(UsageTrackingFromJSON)),
    };
}

export function UsageTrackingResponseToJSON(value?: UsageTrackingResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'message': value.message,
        'usage': value.usage === undefined ? undefined : (value.usage === null ? null : (value.usage as Array<any>).map(UsageTrackingToJSON)),
    };
}

