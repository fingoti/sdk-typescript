/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WebhookHeaders } from './WebhookHeaders';
import {
    WebhookHeadersFromJSON,
    WebhookHeadersFromJSONTyped,
    WebhookHeadersToJSON,
} from './WebhookHeaders';

/**
 * 
 * @export
 * @interface WebhookAttempts
 */
export interface WebhookAttempts {
    /**
     * 
     * @type {number}
     * @memberof WebhookAttempts
     */
    attempt?: number;
    /**
     * 
     * @type {Date}
     * @memberof WebhookAttempts
     */
    timestamp?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof WebhookAttempts
     */
    responseCode?: number;
    /**
     * 
     * @type {string}
     * @memberof WebhookAttempts
     */
    responseDescription?: string | null;
    /**
     * 
     * @type {Array<WebhookHeaders>}
     * @memberof WebhookAttempts
     */
    responseHeaders?: Array<WebhookHeaders> | null;
    /**
     * 
     * @type {string}
     * @memberof WebhookAttempts
     */
    responseBody?: string | null;
}

/**
 * Check if a given object implements the WebhookAttempts interface.
 */
export function instanceOfWebhookAttempts(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebhookAttemptsFromJSON(json: any): WebhookAttempts {
    return WebhookAttemptsFromJSONTyped(json, false);
}

export function WebhookAttemptsFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookAttempts {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attempt': !exists(json, 'attempt') ? undefined : json['attempt'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (json['timestamp'] === null ? null : new Date(json['timestamp'])),
        'responseCode': !exists(json, 'responseCode') ? undefined : json['responseCode'],
        'responseDescription': !exists(json, 'responseDescription') ? undefined : json['responseDescription'],
        'responseHeaders': !exists(json, 'responseHeaders') ? undefined : (json['responseHeaders'] === null ? null : (json['responseHeaders'] as Array<any>).map(WebhookHeadersFromJSON)),
        'responseBody': !exists(json, 'responseBody') ? undefined : json['responseBody'],
    };
}

export function WebhookAttemptsToJSON(value?: WebhookAttempts | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attempt': value.attempt,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp === null ? null : value.timestamp.toISOString()),
        'responseCode': value.responseCode,
        'responseDescription': value.responseDescription,
        'responseHeaders': value.responseHeaders === undefined ? undefined : (value.responseHeaders === null ? null : (value.responseHeaders as Array<any>).map(WebhookHeadersToJSON)),
        'responseBody': value.responseBody,
    };
}

