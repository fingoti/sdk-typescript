/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { I2cSetup } from './I2cSetup';
import {
    I2cSetupFromJSON,
    I2cSetupFromJSONTyped,
    I2cSetupToJSON,
} from './I2cSetup';

/**
 * 
 * @export
 * @interface GatewayI2c
 */
export interface GatewayI2c {
    /**
     * 
     * @type {number}
     * @memberof GatewayI2c
     */
    address?: number;
    /**
     * 
     * @type {Array<Array<number>>}
     * @memberof GatewayI2c
     */
    data?: Array<Array<number>> | null;
    /**
     * 
     * @type {Date}
     * @memberof GatewayI2c
     */
    timestamp?: Date;
    /**
     * 
     * @type {I2cSetup}
     * @memberof GatewayI2c
     */
    setup?: I2cSetup;
    /**
     * 
     * @type {Array<number>}
     * @memberof GatewayI2c
     */
    detect?: Array<number> | null;
}

/**
 * Check if a given object implements the GatewayI2c interface.
 */
export function instanceOfGatewayI2c(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GatewayI2cFromJSON(json: any): GatewayI2c {
    return GatewayI2cFromJSONTyped(json, false);
}

export function GatewayI2cFromJSONTyped(json: any, ignoreDiscriminator: boolean): GatewayI2c {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': !exists(json, 'address') ? undefined : json['address'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
        'setup': !exists(json, 'setup') ? undefined : I2cSetupFromJSON(json['setup']),
        'detect': !exists(json, 'detect') ? undefined : json['detect'],
    };
}

export function GatewayI2cToJSON(value?: GatewayI2c | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'data': value.data,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
        'setup': I2cSetupToJSON(value.setup),
        'detect': value.detect,
    };
}

