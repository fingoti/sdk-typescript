/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DataLogResponse
 */
export interface DataLogResponse {
    /**
     * 
     * @type {string}
     * @memberof DataLogResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof DataLogResponse
     */
    organisationId?: string;
    /**
     * 
     * @type {string}
     * @memberof DataLogResponse
     */
    userId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof DataLogResponse
     */
    direction?: number;
    /**
     * 
     * @type {string}
     * @memberof DataLogResponse
     */
    deviceId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataLogResponse
     */
    type?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DataLogResponse
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof DataLogResponse
     */
    property?: string | null;
    /**
     * 
     * @type {any}
     * @memberof DataLogResponse
     */
    payload?: any | null;
    /**
     * 
     * @type {any}
     * @memberof DataLogResponse
     */
    result?: any | null;
    /**
     * 
     * @type {any}
     * @memberof DataLogResponse
     */
    error?: any | null;
    /**
     * 
     * @type {Date}
     * @memberof DataLogResponse
     */
    timestamp?: Date | null;
}

/**
 * Check if a given object implements the DataLogResponse interface.
 */
export function instanceOfDataLogResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DataLogResponseFromJSON(json: any): DataLogResponse {
    return DataLogResponseFromJSONTyped(json, false);
}

export function DataLogResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataLogResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'organisationId': !exists(json, 'organisationId') ? undefined : json['organisationId'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
        'deviceId': !exists(json, 'deviceId') ? undefined : json['deviceId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'property': !exists(json, 'property') ? undefined : json['property'],
        'payload': !exists(json, 'payload') ? undefined : json['payload'],
        'result': !exists(json, 'result') ? undefined : json['result'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (json['timestamp'] === null ? null : new Date(json['timestamp'])),
    };
}

export function DataLogResponseToJSON(value?: DataLogResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'organisationId': value.organisationId,
        'userId': value.userId,
        'direction': value.direction,
        'deviceId': value.deviceId,
        'type': value.type,
        'success': value.success,
        'property': value.property,
        'payload': value.payload,
        'result': value.result,
        'error': value.error,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp === null ? null : value.timestamp.toISOString()),
    };
}

