/* tslint:disable */
/* eslint-disable */
/**
 * Fingoti API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DevicePeblDto } from './DevicePeblDto';
import {
    DevicePeblDtoFromJSON,
    DevicePeblDtoFromJSONTyped,
    DevicePeblDtoToJSON,
} from './DevicePeblDto';
import type { DeviceVyneDto } from './DeviceVyneDto';
import {
    DeviceVyneDtoFromJSON,
    DeviceVyneDtoFromJSONTyped,
    DeviceVyneDtoToJSON,
} from './DeviceVyneDto';

/**
 * 
 * @export
 * @interface ClaimedDeviceResponse
 */
export interface ClaimedDeviceResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ClaimedDeviceResponse
     */
    success?: boolean;
    /**
     * 
     * @type {DevicePeblDto}
     * @memberof ClaimedDeviceResponse
     */
    pebl?: DevicePeblDto;
    /**
     * 
     * @type {DeviceVyneDto}
     * @memberof ClaimedDeviceResponse
     */
    vyne?: DeviceVyneDto;
}

/**
 * Check if a given object implements the ClaimedDeviceResponse interface.
 */
export function instanceOfClaimedDeviceResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClaimedDeviceResponseFromJSON(json: any): ClaimedDeviceResponse {
    return ClaimedDeviceResponseFromJSONTyped(json, false);
}

export function ClaimedDeviceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimedDeviceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'pebl': !exists(json, 'pebl') ? undefined : DevicePeblDtoFromJSON(json['pebl']),
        'vyne': !exists(json, 'vyne') ? undefined : DeviceVyneDtoFromJSON(json['vyne']),
    };
}

export function ClaimedDeviceResponseToJSON(value?: ClaimedDeviceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'pebl': DevicePeblDtoToJSON(value.pebl),
        'vyne': DeviceVyneDtoToJSON(value.vyne),
    };
}

